<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solicitações de Serviços</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <header>
        <nav class="global-nav">
            <a href="/"><img src="https://i.ibb.co/KVZRVhw/logov4-preto.png" alt="logo-em-obra" class="logo-header"></a>
            <div class="conexao-global">
                <% if (isAuthenticated) { %>
                    <span><a href="/logout">Sair</a></span>
                <% } else { %>
                    <span><a href="/register">Cadastrar</a></span>
                    <button><a href="/login">Entrar</a></button>
                <% } %>
            </div>
        </nav>
    </header>
    
    <h1>Solicitações de Serviços</h1>

    <% if (solicitacoes && solicitacoes.length > 0) { %>
        <table>
            <thead>
                <tr>
                    <th>ID da Candidatura</th>
                    <th>Descrição do Serviço</th>
                    <th>Nome do Pedreiro</th>
                    <th>Status</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <% solicitacoes.forEach(solicitacao => { %>
                    <tr>
                        <td><%= solicitacao.id %></td>
                        <td><%= solicitacao.descricao %></td>
                        <td><%= solicitacao.nome_pedreiro %></td>
                        <td><%= solicitacao.status %></td>
                        <td>
                            <!-- <button onclick="aceitarSolicitacao(<%= solicitacao.id %>, <%= solicitacao.servico_id %>)">Aceitar</button>
                            <button onclick="recusarSolicitacao(<%= solicitacao.id %>, <%= solicitacao.servico_id %>)">Recusar</button> -->
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    <% } else { %>
        <p>Nenhuma solicitação encontrada.</p>
    <% } %>

    <h1>Postar um Novo Serviço</h1>
    <form action="/postar-servico" method="POST">
        
    
        <label for="tipo_servico">Tipo de Serviço:</label>
        <select id="tipo_servico" name="tipo_servico" required>
            <% tipos_servicos.forEach(servico => { %>
                <option value="<%= servico.id %>"><%= servico.nome_servico %></option>
            <% }); %>
        </select>
    
        <label for="cep">CEP:</label>
        <input type="text" id="cep" name="cep">
    
        <label for="prazo_combinar">Prazo a Combinar:</label>
        <input type="text" id="prazo_combinar" name="prazo_combinar" required>
    
        <label for="valor">Valor:</label>
        <input type="number" id="valor" name="valor" required>

        <label for="descricao">Descrição:</label>
        <textarea id="descricao" name="descricao" required></textarea>
    
        <button type="submit">Postar Serviço</button>
    </form>

    <!-- Botões de editar e deletar conta -->
    <div class="conta-acoes">
        <div class="editar-perfil">
            <span><a href="/editar-conta" class="outras-acoes-login">Editar conta</a></span>
        </div>

        <div class="excluir-perfil">
            <span><a href="#" id="delete-account" class="outras-acoes-login">Deletar conta</a></span>
        </div>
    </div>

    <script>
        // Função para aceitar solicitação
        function aceitarSolicitacao(candidaturaId, servicoId) {
            fetch('/aceitar-pedreiro', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ candidatura_id: candidaturaId, servico_id: servicoId }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao aceitar solicitação.');
                }
                return response.text(); // Pode ser texto ou JSON dependendo do que sua API retorna
            })
            .then(data => {
                alert('Solicitação aceita com sucesso!');
                location.reload(); // Recarrega a página para atualizar a lista de solicitações
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao aceitar solicitação.');
            });
        }

        // Função para recusar solicitação
        function recusarSolicitacao(candidaturaId, servicoId) {
            fetch('/recusar-pedreiro', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ candidatura_id: candidaturaId, servico_id: servicoId }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao recusar solicitação.');
                }
                return response.text(); // Pode ser texto ou JSON dependendo do que sua API retorna
            })
            .then(data => {
                alert('Solicitação recusada com sucesso!');
                location.reload(); // Recarrega a página para atualizar a lista de solicitações
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao recusar solicitação.');
            });
        }

        // Adiciona ouvinte de evento para a exclusão da conta
        document.getElementById('delete-account').addEventListener('click', function(event) {
            event.preventDefault(); // Impede o comportamento padrão do link
            const confirmation = confirm("Você tem certeza que deseja deletar sua conta? Esta ação não pode ser desfeita.");
            if (confirmation) {
                // Redireciona para a URL de exclusão da conta
                window.location.href = "/excluir";
            }
        });
    </script>
    
</body>
</html>
